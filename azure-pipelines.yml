trigger:
  - main

stages:
  - stage: Build
    jobs:
      - job: Build
        pool:
          vmImage: "ubuntu-latest"
        steps:
          - checkout: self

          - task: TerraformInstaller@1
            inputs:
              terraformVersion: 'latest'
              displayName: Terraform installer
          - task: trivy@2
            displayName: Trivy scan vulnerability installer
            inputs:
              version: "latest"
              type: "filesystem"
              target: '$(Build.SourcesDirectory)'
              severities: "HIGH, CRITICAL"
              ignoreUnfixed: true
              showSuppressed: true
              ignoreScanErrors: true

          - task: TerraformTask@5
            displayName: tf init
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'Azure subscription 1'
              backendAzureRmStorageAccountName: 'storagestatefile001'
              backendAzureRmContainerName: 'tfstate'
              backendAzureRmKey: 'terraform.tfstate'
              
          - task: TerraformTask@5
            displayName: Tf validate
            inputs:
              provider: "azurerm"
              command: "validate"
          - task: TerraformTask@5
            displayName: tf fmt
            inputs:
              provider: 'azurerm'
              command: 'custom'
              outputTo: 'console'
              customCommand: 'fmt'
              environmentServiceNameAzureRM: 'Azure Subscription 1'
          - task: TerraformTask@5
            displayName: tf plan
            inputs:
              provider: 'azurerm'
              command: 'plan'
              commandOptions: '-out $(Build.SourcesDirectory)/tfplanfile'
              environmentServiceNameAzureRM: 'Azure Subscription 1' 
              
          - task: ArchiveFiles@2
            displayName: Archive files
            inputs:
             rootFolderOrFile: '$(Build.SourcesDirectory)/'
             includeRootFolder: false
             archiveType: 'zip'
             archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
             replaceExistingArchive: true

          - task: PublishBuildArtifacts@1
            displayName: Publish
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: '$(Build.BuildId)-build'
              publishLocation: 'Container'
